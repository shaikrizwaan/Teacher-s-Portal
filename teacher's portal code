import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class TeacherPortal {
    private Map<String, Student> students;
    private Map<String, Course> courses;
    private Map<String, Integer> grades;

    public TeacherPortal() {
        students = new HashMap<>();
        courses = new HashMap<>();
        grades = new HashMap<>();
    }

    public void addStudent(String studentId, String name) {
        Student student = new Student(studentId, name);
        students.put(studentId, student);
    }

    public void editStudentName(String studentId, String newName) {
        if (students.containsKey(studentId)) {
            students.get(studentId).setName(newName);
            System.out.println("Student name updated.");
        } else {
            System.out.println("Student not found.");
        }
    }

    public void viewStudentDetails(String studentId) {
        if (students.containsKey(studentId)) {
            Student student = students.get(studentId);
            System.out.println("Student ID: " + student.getStudentId());
            System.out.println("Name: " + student.getName());
        } else {
            System.out.println("Student not found.");
        }
    }

    public void addCourse(String courseCode, String courseName) {
        Course course = new Course(courseCode, courseName);
        courses.put(courseCode, course);
    }

    public void viewCourseDetails(String courseCode) {
        if (courses.containsKey(courseCode)) {
            Course course = courses.get(courseCode);
            System.out.println("Course Code: " + course.getCourseCode());
            System.out.println("Course Name: " + course.getCourseName());
        } else {
            System.out.println("Course not found.");
        }
    }

    public void addGrade(String studentId, String courseCode, int grade) {
        String key = studentId + "_" + courseCode;
        grades.put(key, grade);
        System.out.println("Grade added.");
    }

    public void calculateGrade(String studentId, String courseCode) {
        String key = studentId + "_" + courseCode;
        if (grades.containsKey(key)) {
            int grade = grades.get(key);
            System.out.println("Grade for Student ID " + studentId + " in Course " + courseCode + ": " + grade);
        } else {
            System.out.println("Grade not found for the specified student and course.");
        }
    }

    public static void main(String[] args) {
        TeacherPortal portal = new TeacherPortal();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Teacher's Portal Menu:");
            System.out.println("1. Add Student");
            System.out.println("2. Edit Student Name");
            System.out.println("3. View Student Details");
            System.out.println("4. Add Course");
            System.out.println("5. View Course Details");
            System.out.println("6. Add Grade");
            System.out.println("7. Calculate Grade");
            System.out.println("8. Exit");
            System.out.print("Enter your choice: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
                case 1:
                    System.out.print("Enter Student ID: ");
                    String studentId = scanner.nextLine();
                    System.out.print("Enter Student Name: ");
                    String studentName = scanner.nextLine();
                    portal.addStudent(studentId, studentName);
                    break;

                case 2:
                    System.out.print("Enter Student ID: ");
                    studentId = scanner.nextLine();
                    System.out.print("Enter New Name: ");
                    studentName = scanner.nextLine();
                    portal.editStudentName(studentId, studentName);
                    break;

                case 3:
                    System.out.print("Enter Student ID: ");
                    studentId = scanner.nextLine();
                    portal.viewStudentDetails(studentId);
                    break;

                case 4:
                    System.out.print("Enter Course Code: ");
                    String courseCode = scanner.nextLine();
                    System.out.print("Enter Course Name: ");
                    String courseName = scanner.nextLine();
                    portal.addCourse(courseCode, courseName);
                    break;

                case 5:
                    System.out.print("Enter Course Code: ");
                    courseCode = scanner.nextLine();
                    portal.viewCourseDetails(courseCode);
                    break;

                case 6:
                    System.out.print("Enter Student ID: ");
                    studentId = scanner.nextLine();
                    System.out.print("Enter Course Code: ");
                    courseCode = scanner.nextLine();
                    System.out.print("Enter Grade: ");
                    int grade = scanner.nextInt();
                    portal.addGrade(studentId, courseCode, grade);
                    break;

                case 7:
                    System.out.print("Enter Student ID: ");
                    studentId = scanner.nextLine();
                    System.out.print("Enter Course Code: ");
                    courseCode = scanner.nextLine();
                    portal.calculateGrade(studentId, courseCode);
                    break;

                case 8:
                    scanner.close();
                    System.exit(0);

                default:
                    System.out.println("Invalid choice. Please enter a valid option.");
            }
        }
    }
}
